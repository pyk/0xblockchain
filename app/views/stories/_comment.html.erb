<%# Ger replies data %>
<% replies = replies_data[comment.id] %>
<li id="c_<%= comment.short_id%>" class="mb3">
  <%# Comment meta data %>
  <p>
    <%# Comment upvote button %>
    <% if @user %>
      <%# TODO (pyk): Update this to link_to %>
      <a href="#"
        class="link black-50 tc mr1">
        <svg width="10" height="12" viewBox="0 0 14 12" fill="none" xmlns="http://www.w3.org/2000/svg" style="margin-top: 3px;">
        <path d="M7 0L13.9282 12H0.0717969L7 0Z" fill="rgba(0,0,0,0.3)" />
        </svg>
      </a>
    <% else %>
      <%# TODO (pyk): Update this to link_to %>
      <a href="/login"
        class="link black-50 tc mr1">
        <svg width="10" height="12" viewBox="0 0 14 12" fill="none" xmlns="http://www.w3.org/2000/svg" style="margin-top: 3px;">
        <path d="M7 0L13.9282 12H0.0717969L7 0Z" fill="rgba(0,0,0,0.3)" />
        </svg>
      </a>
    <% end %>

    <%# Display current points %>
    <span class="gray mr1">
    <% if comment.score >= 2 %>
      <%= comment.score %> points
    <% else %>
      <%= comment.score %> point
    <% end %>
      by
    </span>

    <%# User avatar and username%>
    <% if (@user && @user.show_avatars?) || !@user %>
      <a href="/u/<%= comment.user.username %>"><%= avatar_img(comment.user, 16) %></a>
    <% end %>
    <a href="/u/<%= comment.user.username %>"
      class="<%= comment.html_class_for_user %> gray underline-hover link">
      <%= comment.user.username %>
    </a>

    <%# Time and link to the comment %>
    <a class="link gray underline-hover"
      href="<%= comment_path(comment) %>">
      <%= time_ago_in_words_label(comment.created_at) %>
    </a>

    <%# Show collapse button %>
    <a onclick="expandOrCollapseComment(this, 'comment_data_<%= comment.short_id %>')"
      class="link gray underline-hover"
      href="javascript:void(0)">
      [ - ]
    </a>
  <p>

  <%# We group the comment data into one to make it collapseable %>
  <div id="comment_data_<%= comment.short_id %>">
    <%# Comment content %>
    <%= comment.comment %>

    <p>
      <a onclick="toggleReplyForm('new_reply_<%= comment.short_id %>')"
        href="javascript:void(0)"
        class="gray link underline-hover">reply</a>
    </p>

    <%# Display comment box %>
    <% parent_comment = comment %>
    <% if @user %>
      <%= form_for @comment,
        :html => {
          :id => "new_reply_" + parent_comment.short_id,
          :class => "mt3 mb3 measure",
          :style => "display: none;"} do |f| %>
        <%# Show errors if posted comment is invalid %>
        <% if @comment.errors.any? %>
          <%= errors_for @comment %>
        <% end %>

        <%# Hidden fields for controller %>
        <%= f.hidden_field :story_id,
          :value => @comment.story.short_id %>
        <%= f.hidden_field :parent_id,
          :value => parent_comment.short_id %>

        <%# Display text area for comment %>
        <%= f.text_area :comment,
          :class => "input-reset ba b--black-20 pa2 mb2 db w-100",
          :id => "reply_text_" + parent_comment.short_id,
          :rows => 5 %>
        <small id="name-desc" class="fr f7 black-60 db mb2">
        Markdown are supported
        </small>
        <%= f.submit "Reply",
          :class => "pv1 ph2 mr3" %>
      <% end %>
    <% else %>
      <%# Disable the form if user is not logged in %>
      <%= form_for @comment, :html => {:class => "mt3 measure"} do |f| %>
        <%# Display text area for comment %>
        <%= f.text_area :comment,
          :class => "input-reset ba b--black-20 pa2 mb2 db w-100",
          :rows => 5,
          :disabled => true,
          :placeholder => "You must be logged in to leave a comment." %>
        <small id="name-desc" class="fr f7 black-60 db mb2">
        Markdown are supported
        </small>
        <%= f.submit "Add comment",
          :disabled => true,
          :class => "pv1 ph2 mr3" %>
      <% end %>
    <% end %>

    <%# Get and show the replies data, if any
      We use recursive technique to render the comments tree %>
    <% if replies.present? %>
      <ol class="list pl3">
        <%= render partial: "comment",
            collection: replies,
            as: :comment,
            locals: {replies_data: replies_data} %>
      </ol>
    <% end %>
  </div>

</li>