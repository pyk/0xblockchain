<%= render :partial => "stories/form_errors",
    :locals => { :f => f, :story => f.object } %>

<div class="cf mb3">
  <div class="fl w-20">
  <%= f.label :title, class: "b db mb2" do %>
    Title
  <% end%>
  </div>
  <div class="fl w-80 measure">
  <%= f.text_field :title,
      class: "input-reset ba b--black-20 pa2 mb2 db w-100",
      :maxlength => 100 %>
  </div>
</div>

<%# URL Form %>
<div class="cf mb3">
  <div class="fl w-20">
    <%= f.label :url, class: "b db mb2" do %>
      URL
    <% end%>
  </div>
  <div class="fl w-80 measure">
    <%= f.text_field :url,
        class: "input-reset ba b--black-20 pa2 mb2 db w-100",
        :autocomplete => "off" %>
  </div>
</div>

<%# Text %>
<div class="cf mb3">
  <div class="fl w-20">
    <%= f.label :description, class: "b db mb2" do %>
      Text
    <% end%>
  </div>
  <div class="fl w-80 measure">
    <%= f.text_area :description,
      :class => "input-reset ba b--black-20 pa2 mb2 db w-100",
      :rows => 15 %>
      <small id="name-desc" class="fs-10pt black-60 db mb2">
        Markdown are supported
      </small>
  </div>
</div>

<%# Tags %>
<div class="cf mb3">
  <div class="fl w-20">
    <%= f.label :tag_names, class: "b db mb2" do %>
      Tags
    <% end%>
  </div>
  <div class="fl w-80 measure f6">
    <%= f.select :tag_names, options_for_select(
      Tag.all_with_filtered_counts_for(@user).map do |t|
        if t.description.present?
          [t.description, t.tag]
        else
          [t.tag, t.tag]
        end
      end,
      f.object.tag_names
    ),
    {},
    { :multiple => true, :required => true }%>
 </div>
</div>